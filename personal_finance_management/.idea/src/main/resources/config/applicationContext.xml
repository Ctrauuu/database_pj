<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!--1.读取db.properties-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 2.配置数据源 -->
    <bean id="dataSource" class=
            "org.apache.commons.dbcp2.BasicDataSource">
        <!--数据库驱动 -->
        <property name="driverClassName"   value="${jdbc.driver}" />
        <!--连接数据库的url -->
        <property name="url"               value="${jdbc.url}" />
        <!--连接数据库的用户名 -->
        <property name="username"          value="${jdbc.username}" />
        <!--连接数据库的密码 -->
        <property name="password"          value="${jdbc.password}" />
        <!--初始化连接数  -->
        <property name="initialSize"       value="${jdbc.initialSize}" />
        <!--最大连接数 -->
        <property name="maxTotal"          value="${jdbc.maxTotal}" />
        <!--最大空闲连接  -->
        <property name="maxIdle"           value="${jdbc.maxIdle}" />
        <!--最小空闲连接  -->
        <property name="minIdle"           value="${jdbc.minIdle}" />
    </bean>

    <!-- 3.事务管理器，依赖于数据源 -->
    <bean id="transactionManager" class=
            "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 通知,配置事务增强，事务如何切入 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 传播行为 -->
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="SUPPORTS"
                       read-only="true" />
            <tx:method name="select*" propagation="SUPPORTS"
                       read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS"
                       read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 切面配置，切入点表达式 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* ssmjx.core.service..*(..))" />
    </aop:config>

    <!--5.配置MyBatis工厂 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!--指定核心配置文件位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>


    <!--6.配置Mapper扫描器，将mybiatis接口的实现加入到ioc容器中，写在此包下的接口即可以被扫描到-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="ssmjx.core.dao"/>
    </bean>

    <!--
    //配置一个可以执行批量的sqlSession
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>
    -->

    <!--7.开启配置扫描@Service注解-->
    <context:component-scan base-package="ssmjx.core.service"/>
</beans>
